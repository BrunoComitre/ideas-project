/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["tsconfig.eslint.json"],
    "sourceType": "module"
  },
  "globals": {
    "after": true,
    "before": true,
    "beforeEach": true,
    "afterEach": true,
    "describe": true,
    "it": true
  },
  "extends": [
    "prettier",
    "prettier/@typescript-eslint",
    "prettier/standard",
    "prettier/unicorn",
    "eslint:recommended",
    "plugin:prettier/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsdoc/recommended",
    "plugin:unicorn/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "plugins": [
    "@typescript-eslint",
    "import",
    "prettier",
    "jsdoc",
    "prefer-arrow",
    "unicorn",
    "eslint-plugin-import",
    "eslint-plugin-jsdoc",
    "@angular-eslint/eslint-plugin",
    "eslint-plugin-prefer-arrow",
    "@typescript-eslint",
    "@typescript-eslint/tslint",
    "@angular-eslint/eslint-plugin-template",
    "eslint-plugin-react"
  ],
  "rules": {
    "@angular-eslint/component-class-suffix": ["error"],
    "@angular-eslint/no-input-rename": ["error"],
    "@angular-eslint/no-output-on-prefix": ["error"],
    "@angular-eslint/no-output-rename": ["error"],
    "@angular-eslint/use-pipe-transform-interface": ["error"],
    "@angular-eslint/no-conflicting-lifecycle": ["error"],
    "@angular-eslint/no-host-metadata-property": ["error"],
    "@angular-eslint/no-inputs-metadata-property": ["error"],
    "@angular-eslint/no-output-native": ["error"],
    "@angular-eslint/no-outputs-metadata-property": ["error"],
    "@angular-eslint/template/banana-in-box": ["error"],
    "@angular-eslint/template/eqeqeq": ["error"],
    "@angular-eslint/template/no-negated-async": ["error"],
    "@angular-eslint/use-lifecycle-interface": ["error"],
    "@angular-eslint/contextual-lifecycle": ["error"],
    "@angular-eslint/directive-class-suffix": ["error"],
    "@angular-eslint/component-selector": [
        "error",
        {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
       }
      ],
    "@angular-eslint/directive-selector": [
        "error",
        {
            "type": "attribute",
            "prefix": "app",
           "style": "camelCase"
       }
    ],
    "@typescript-eslint/ban-ts-ignore": ["off"],
    "@typescript-eslint/camelcase": ["off"],
    "@typescript-eslint/explicit-function-return-type": ["off"],
    "@typescript-eslint/interface-name-prefix": ["off"],
    "@typescript-eslint/no-unused-vars": ["off"],
    "@typescript-eslint/explicit-module-boundary-types": ["off"],
    "@typescript-eslint/consistent-type-definitions": ["error"],
    "@typescript-eslint/no-misused-new": ["error"],
    "@typescript-eslint/no-namespace": ["error"],
    "@typescript-eslint/no-non-null-assertion": ["error"],
    "@typescript-eslint/no-parameter-properties": ["off"],
    "@typescript-eslint/consistent-type-assertions": ["error"],
    "@typescript-eslint/dot-notation": ["error"],
    "@typescript-eslint/adjacent-overload-signatures": ["error"],
    "@typescript-eslint/array-type": ["off"],
    "@typescript-eslint/member-ordering": ["error"],
    "@typescript-eslint/naming-convention": ["error"],
    "@typescript-eslint/no-empty-function": ["off"],
    "@typescript-eslint/no-empty-interface": ["error"],
    "@typescript-eslint/no-explicit-any": ["off"],
    "@typescript-eslint/no-unused-expressions": ["error"],
    "@typescript-eslint/no-use-before-define": ["off"],
    "@typescript-eslint/no-var-requires": ["off"],
    "@typescript-eslint/prefer-for-of": ["error"],
    "@typescript-eslint/prefer-function-type": ["error"],
    "@typescript-eslint/prefer-namespace-keyword": ["error"],
    "@typescript-eslint/type-annotation-spacing": ["error"],
    "@typescript-eslint/unified-signatures": ["error"],
    "@typescript-eslint/ban-types": [
        "error",
        {
            "types": {
                "Object": {
                    "message": "Avoid using the `Object` type. Did you mean `object`?"
                },
                "Function": {
                    "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                },
                "Boolean": {
                    "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                },
                "Number": {
                    "message": "Avoid using the `Number` type. Did you mean `number`?"
                },
                "String": {
                    "message": "Avoid using the `String` type. Did you mean `string`?"
                },
                "Symbol": {
                    "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                }
            }
        }
    ],
    "@typescript-eslint/indent": [
        "error",
        4,
        {
            "FunctionDeclaration": {
                "parameters": "first"
            },
            "FunctionExpression": {
                "parameters": "first"
            }
        }
    ],
    "@typescript-eslint/member-delimiter-style": [
        "error",
        {
            "multiline": {
                "delimiter": "semi",
                "requireLast": true
            },
            "singleline": {
                "delimiter": "semi",
                "requireLast": false
            }
        }
    ],
    "@typescript-eslint/no-inferrable-types": [
        "off",
        {
            "ignoreParameters": true
        }
    ],
    "@typescript-eslint/no-shadow": [
        "error",
        {
            "hoist": "all"
        }
    ],
    "@typescript-eslint/quotes": [
        "error",
        "single"
    ],
    "@typescript-eslint/semi": [
        "error",
        "always"
    ],
    "@typescript-eslint/triple-slash-reference": [
        "error",
        {
            "path": "always",
            "types": "prefer-import",
            "lib": "always"
        }
    ],
    "@typescript-eslint/tslint/config": [
      "error",
      {
          "rules": {
              "import-spacing": true,
              "whitespace": [
                  true,
                  "check-branch",
                  "check-decl",
                  "check-operator",
                  "check-separator",
                  "check-type",
                  "check-typecast"
              ]
          }
      }
    ],
    "arrow-body-style": ["error"],
    "avoidEscape": ["off"],
    "allowTemplateLiterals": ["off"],
    "arrow-parens": [ "off", "always"],
    "brace-style": [ "off", "off" ],
    "comma-dangle": ["off"],
    "complexity": ["off"],
    "constructor-super": ["error"],
    "curly": ["error"],
    "class-methods-use-this": ["off"],
    "eol-last": ["error"],
    "eqeqeq": [ "error", "smart" ],
		"func-names": 2,
    "guard-for-in": ["error"],
    "id-match": ["error"],
    "import/prefer-default-export": 0,
    "import/no-deprecated": ["warn"],
    "import/order": ["off"],
    "indent": ["off"],
    "id-blacklist": [
      "error",
      "any",
      "Number",
      "number",
      "String",
      "string",
      "Boolean",
      "boolean",
      "Undefined",
      "undefined"
    ],
    "jsdoc/check-alignment": ["error"],
    "jsdoc/check-indentation": ["error"],
    "jsdoc/newline-after-description": ["error"],
    "jsdoc/no-types": ["error"],
    "linebreak-style": ["off"],
    "max-classes-per-file": ["off"],
    "max-len": [
        "error",
        {
            "code": 140
        }
    ],
    "new-parens": ["off"],
    "newline-per-chained-call": ["off"],
		"no-empty-function": 2,
		"no-magic-numbers": 2,
		"no-mixed-spaces-and-tabs": 0,
		"newline-after-var": 0,
		"no-tabs": 0,
		"no-unsafe-assignment": 0,
    "no-use-before-define": ["off", "warn", "error"],
    "no-async-promise-executor": ["off"],
    "no-empty-pattern": ["off"],
    "no-undef": ["error"],
    "no-prototype-builtins": ["off"],
    "no-bitwise": ["error"],
    "no-caller": ["error"],
    "no-cond-assign": ["error"],
    "no-trailing-spaces": ["off"],
    "no-undef-init": ["error"],
    "no-underscore-dangle": ["error"],
    "no-unsafe-finally": ["error"],
    "no-unused-labels": ["error"],
    "no-var": ["error"],
    "no-throw-literal": ["error"],
    "no-debugger": ["error"],
    "no-empty": ["off"],
    "no-eval": ["error"],
    "no-irregular-whitespace": ["off"],
    "no-extra-semi": ["off"],
    "no-fallthrough": ["error"],
    "no-invalid-this": ["off"],
    "no-multiple-empty-lines": ["off"],
    "no-new-wrappers": ["error"],
    "no-restricted-imports": [
        "error",
        "rxjs/Rx"
    ],
    "no-console": [
      "error",
      {
          "allow": [
            "log",
            "warn",
            "dir",
            "timeLog",
            "assert",
            "clear",
            "count",
            "countReset",
            "group",
            "groupEnd",
            "table",
            "dirxml",
            "error",
            "groupCollapsed",
            "Console",
            "profile",
            "profileEnd",
            "timeStamp",
            "context"
          ]
      }
    ],
    "object-shorthand": ["error"],
    "one-var": [ "error", "never" ],
    "object-curly-spacing": ["error", "always"],
    "prefer-arrow/prefer-arrow-functions": ["error"],
    "prefer-const": ["error"],
    "prettier/prettier" : ["off", "error"],
    "quote-props": [
        "error",
        "as-needed"
    ],
    "require-await": 2,
    "radix": ["error"],
    "react/jsx-curly-spacing": ["off"],
    "react/jsx-equals-spacing": ["off"],
    "react/jsx-wrap-multilines": ["off"],
    "react/jsx-tag-spacing": [
        "off",
        {
            "afterOpening": "allow",
            "closingSlash": "allow"
        }
    ],
    "sort-keys": ["off"],
    "semi": ["error", "always"],
    "space-before-function-paren": [
        "error",
        {
            "anonymous": "never",
            "asyncArrow": "always",
            "named": "never"
        }
    ],
    "space-in-parens": [
      "off",
      "never"
    ],
    "spaced-comment": [
        "error",
        "always",
        {
            "markers": [
                "/"
            ]
        }
    ],
    "use-isnan": ["error"],
    "unicorn/filename-case": [
      "warn",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        }
      }
    ],
    "valid-typeof": ["off"],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {},
      "node": {
        "paths": ["node_modules/", "node_modules/@types", "src"],
        "extensions": [ ".js", ".ts" ]
      }
    }
  },
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  }
}
